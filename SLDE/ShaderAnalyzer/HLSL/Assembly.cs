
using System;
using System.Collections.Generic;

namespace SLDE.ShaderAnalyzer.HLSL {



    public class Assembly : IAssembly {
        private static string parsingFailedError = "assembly parsing failed";
        private static string noSignatureFound = "Parser: invalid assembly, no HLSL Shader Compiler signature found";

        private bool compiledSuccessfully;

        private string[] assemblyLines;
        private string[] errorLines;

        private List<Instruction> instructions;
        private List<Notification> notifications;
        private List<CodeNotification> codeNotifications;
        private List<AssemblyNotification> assemblyNotifications;

        public Assembly(string[] assemblyLines, string[] errorLines) {
            this.assemblyLines = assemblyLines;
            this.errorLines = errorLines;

            instructions = new List<Instruction>();
            notifications = new List<Notification>();
            codeNotifications = new List<CodeNotification>();
            assemblyNotifications = new List<AssemblyNotification>();

            bool parsedSuccessfully = ParseAssembly();
            if (!parsedSuccessfully) {
                notifications.Add(new Notification(NotificationType.Error, parsingFailedError));
            }

            compiledSuccessfully = parsedSuccessfully;
        }

        public bool CompiledSuccessfully() {
            return true;
        }

        public string GetRawCompilerOutput() {
            return String.Join("\n", assemblyLines);
        }

        public string GetRawCompilerErrors() {
            return String.Join("\n", errorLines);
        }

        public IEnumerable<Instruction> GetInstructions() {
            return instructions;
        }

        public IEnumerable<Notification> GetNotifications() {
            return notifications;
        }

        public IEnumerable<CodeNotification> GetCodeNotifications() {
            return codeNotifications;
        }

        public IEnumerable<AssemblyNotification> GetAssemblyNotifications() {
            return assemblyNotifications;
        }

        private bool ParseAssembly() {
            if (assemblyLines.Length == 0) return true;

            int i = 0;
            int fileStart = -1;

            for (; i < assemblyLines.Length; i++) {
                if (assemblyLines[i].StartsWith("// Generated by Microsoft (R) HLSL Shader Compiler")) {
                    i++;
                    fileStart = i;
                    break;
                }
            }

            if (fileStart == -1) {
                notifications.Add(new Notification(NotificationType.Error, noSignatureFound));
                return false;
            }

            for (; i < assemblyLines.Length; i++) {
                
            }

            return false;
        }

    }

}
